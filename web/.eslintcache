[{"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\index.js":"1","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\routes\\index.js":"2","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\index.js":"3","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\index.js":"4","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\index.js":"5","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\styles.js":"6","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\styles.js":"7","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\styles.js":"8","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\isConnected.js":"9","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\typeIcons.js":"10","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\services\\api.js":"11","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\index.js":"12","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\index.js":"13","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\index.js":"14","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\index.js":"15","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\styles.js":"16","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\styles.js":"17","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\styles.js":"18","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\styles.js":"19","D:\\GitHub\\ta-marcado\\web\\src\\index.js":"20","D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js":"21","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js":"22","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js":"23","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js":"24","D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js":"25","D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js":"26","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js":"27","D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js":"28","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js":"29","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js":"30","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js":"31","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js":"32","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js":"33","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js":"34","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js":"35","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js":"36","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js":"37","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js":"38","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js":"39","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js":"40"},{"size":218,"mtime":1610039093146,"results":"41","hashOfConfig":"42"},{"size":644,"mtime":1610039093146,"results":"43","hashOfConfig":"42"},{"size":1532,"mtime":1610039093146,"results":"44","hashOfConfig":"42"},{"size":4405,"mtime":1610039093146,"results":"45","hashOfConfig":"42"},{"size":2408,"mtime":1610039093146,"results":"46","hashOfConfig":"42"},{"size":2626,"mtime":1610039093146,"results":"47","hashOfConfig":"42"},{"size":1186,"mtime":1610039093146,"results":"48","hashOfConfig":"42"},{"size":1004,"mtime":1610039093146,"results":"49","hashOfConfig":"42"},{"size":92,"mtime":1610039093146,"results":"50","hashOfConfig":"42"},{"size":640,"mtime":1610039093146,"results":"51","hashOfConfig":"42"},{"size":121,"mtime":1610039093146,"results":"52","hashOfConfig":"42"},{"size":219,"mtime":1610039093146,"results":"53","hashOfConfig":"42"},{"size":338,"mtime":1610039093130,"results":"54","hashOfConfig":"42"},{"size":687,"mtime":1610039093146,"results":"55","hashOfConfig":"42"},{"size":1536,"mtime":1610039093146,"results":"56","hashOfConfig":"42"},{"size":343,"mtime":1610039093146,"results":"57","hashOfConfig":"42"},{"size":873,"mtime":1610039093146,"results":"58","hashOfConfig":"42"},{"size":1597,"mtime":1610039093146,"results":"59","hashOfConfig":"42"},{"size":567,"mtime":1610039093146,"results":"60","hashOfConfig":"42"},{"size":218,"mtime":1610039093146,"results":"61","hashOfConfig":"62"},{"size":760,"mtime":1619140029986,"results":"63","hashOfConfig":"62"},{"size":2409,"mtime":1618792396825,"results":"64","hashOfConfig":"62"},{"size":4397,"mtime":1618796743772,"results":"65","hashOfConfig":"62"},{"size":1004,"mtime":1617543128029,"results":"66","hashOfConfig":"62"},{"size":121,"mtime":1610039093146,"results":"67","hashOfConfig":"62"},{"size":93,"mtime":1618796217865,"results":"68","hashOfConfig":"62"},{"size":2623,"mtime":1617544762914,"results":"69","hashOfConfig":"62"},{"size":640,"mtime":1610039093146,"results":"70","hashOfConfig":"62"},{"size":1537,"mtime":1618797175381,"results":"71","hashOfConfig":"62"},{"size":223,"mtime":1617545239629,"results":"72","hashOfConfig":"62"},{"size":687,"mtime":1610039093146,"results":"73","hashOfConfig":"62"},{"size":403,"mtime":1617544546948,"results":"74","hashOfConfig":"62"},{"size":1597,"mtime":1617544977352,"results":"75","hashOfConfig":"62"},{"size":370,"mtime":1618792340221,"results":"76","hashOfConfig":"62"},{"size":873,"mtime":1617544267047,"results":"77","hashOfConfig":"62"},{"size":612,"mtime":1617544554492,"results":"78","hashOfConfig":"62"},{"size":2052,"mtime":1619142603805,"results":"79","hashOfConfig":"62"},{"size":1749,"mtime":1619142629960,"results":"80","hashOfConfig":"62"},{"size":2888,"mtime":1619143038340,"results":"81","hashOfConfig":"62"},{"size":1594,"mtime":1619143080153,"results":"82","hashOfConfig":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"8i3q96",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"1jpm8pc",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"127"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"127"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"127"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\index.js",[],["174","175"],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\routes\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\index.js",["176","177","178"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [id, setId] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        macaddress: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      macaddress: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\index.js",["179"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport * as S from './styles';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n      setTasks(response.data);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function Notificacao(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect( () => {\r\n    loadTasks();\r\n    \r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [filterActived])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/qrcode/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <S.FilterArea>\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n        <FilterCard title=\"Todos\" actived={filterActived === 'all'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n        <FilterCard title=\"Hoje\" actived={filterActived === 'today'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n        <FilterCard title=\"Mês\" actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n        </button>\r\n\r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n      </S.Title>\r\n      <S.Content>\r\n        {\r\n          tasks.map( t => (\r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} done={t.done}/>\r\n        </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n      \r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\isConnected.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\typeIcons.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\services\\api.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\index.js",["180","181"],"import React , {useMemo} from 'react';\r\nimport * as S from './styles';\r\nimport {format} from 'date-fns';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction TaskCard({type, title, when, done}) {\r\n  const date = useMemo(() => format(new Date (when), 'dd/MM/yyyy'));\r\n  const hour = useMemo(() => format(new Date (when), 'HH:mm'));\r\n  return (\r\n    <S.Container done={done}>\r\n        <S.TopCard>\r\n        <img src={typeIcons[type]} alt=\"Ícone da Tarefa\"></img>\r\n        <h3>{title}</h3>\r\n        </S.TopCard>\r\n        <S.BottomCard>\r\n        <strong>{date}</strong>\r\n        <span>{hour}</span>\r\n        </S.BottomCard>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\index.js",[],["182","183"],"D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js",["184"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport * as S from './styles';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('today');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n      setTasks(response.data);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function Notificacao(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect( () => {\r\n    loadTasks();\r\n    \r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [filterActived])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/login/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <S.FilterArea>\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n        <FilterCard title=\"Todos\" actived={filterActived === 'all'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n        <FilterCard title=\"Hoje\" actived={filterActived === 'today'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n        <FilterCard title=\"Mês\" actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n        </button>\r\n\r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n      </S.Title>\r\n      <S.Content>\r\n        {\r\n          tasks.map( t => (\r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} done={t.done}/>\r\n        </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n      \r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js",["185","186","187"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [id, setId] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        userid: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      userid: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js",["188","189"],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js",["190"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport filter from '../../assets/filter.png';\r\nimport filteractivated from '../../assets/filter-actived.png';\r\n\r\n\r\nfunction FilterCard( {title, actived} ) {\r\n  return (\r\n    <S.Container actived ={actived}>\r\n      <img src={filter} alt='Filtro'></img> \r\n      <span>{title}</span>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default FilterCard;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js",[],["191","192"],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js",["193","194","195"],"import React, { useState}  from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport * as S from './styles';\r\n\r\nfunction Login() {\r\n\r\n    const [login, setLogin] = useState();\r\n    const [senha, setSenha] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    async function verifyLogin(){\r\n        await api.get(`/user/search/all`)\r\n        .then(response => {\r\n            var i;\r\n            for (i=0;i<response.data.length;i++){\r\n                if(response.data[i].user==login){\r\n                    if(response.data[i].pass==senha){\r\n                        let id = response.data[i]._id\r\n                        localStorage.setItem('@tamarcado/userid',id);\r\n                        setRedirect(true);\r\n                        window.location.reload();\r\n                    } else {\r\n                        alert('Usuário ou senha incorretos! ');\r\n                    }\r\n                }\r\n            }\r\n            if(!localStorage.getItem('@tamarcado/userid')){\r\n                alert('Usuário não localizado!')\r\n            }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <S.Container>\r\n            \r\n            {redirect && <Redirect to=\"/\"/>}\r\n            <S.Content>\r\n                <img src={logo}/>\r\n                <h1>Entre no aplicativo!</h1>\r\n                <S.ValidationCode>\r\n                    <span>Login</span>\r\n                    <input type=\"text\" onChange={e => setLogin(e.target.value)} value={login}/>\r\n                    <span>Senha</span>\r\n                    <input type=\"password\" onChange={e => setSenha(e.target.value)} value={senha}/>\r\n                    <button type=\"button\" onClick={verifyLogin}>Entrar !</button>\r\n                </S.ValidationCode>\r\n                <Link to={`/cadastro`}>Não tem conta? Cadastre-se !</Link>\r\n            </S.Content>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js",["196","197"],"import React, { useState}  from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport * as S from './styles';\r\n\r\nfunction Cadastro() {\r\n\r\n    const [user, setUser] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [nome, setNome] = useState();\r\n    const [sobrenome, setSobrenome] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    var flag = false;\r\n\r\n    async function cadastrarUsuario(){\r\n        if(!user) \r\n        return alert(\"Informe o usuário!\")\r\n        else if (!pass)\r\n        return alert(\"Informe a senha!\")\r\n        else if (!nome)\r\n        return alert(\"Informe seu nome!\")\r\n        else if (!sobrenome)\r\n        return alert(\"Informe seu sobrenome!\")\r\n        else if (!email)\r\n        return alert(\"Informe o e-mail!\")\r\n\r\n        await api.get(`/user/search/all`)\r\n        .then(response => {\r\n            var i;\r\n            for (i=0;i<response.data.length;i++){\r\n                if(response.data[i].user==user){\r\n                    flag=true;\r\n                }\r\n            }\r\n          })\r\n\r\n        if(!flag){\r\n        await api.post('/user', {\r\n            user,\r\n            pass,\r\n            nome,\r\n            sobrenome,\r\n            email\r\n        })\r\n        .then( () => {\r\n            alert(\"Cadastro realizado com sucesso! Redirecionando...\")\r\n            setRedirect(true)\r\n        })\r\n        .catch( () =>{\r\n            alert(\"Deu merda!\")\r\n        })\r\n    }\r\n        else {\r\n            return alert(\"Usuário já existe!\")\r\n        }}\r\n\r\n    return (\r\n        <S.Container>\r\n            <Link to={`/`}><img src={logo}/></Link>\r\n            \r\n            \r\n            {redirect && <Redirect to=\"/login\"/>}\r\n            <S.Content>\r\n                \r\n                <S.ContainerForm>\r\n                    <span>Nome</span>\r\n                    <input type=\"text\" onChange={e => setNome(e.target.value)} value={nome}/>\r\n                    <span>Sobrenome</span>\r\n                    <input type=\"text\" onChange={e => setSobrenome(e.target.value)} value={sobrenome}/>\r\n                    <span>Usuário</span>\r\n                    <input type=\"text\" onChange={e => setUser(e.target.value)} value={user}/>\r\n                    <span>Senha</span>\r\n                    <input type=\"password\" onChange={e => setPass(e.target.value)} value={pass}/>\r\n                    <span>Email</span>\r\n                    <input type=\"email\" onChange={e => setEmail(e.target.value)} value={email}/>\r\n                    <button type=\"button\" onClick={cadastrarUsuario}>Cadastrar !</button>\r\n                </S.ContainerForm>\r\n\r\n            </S.Content>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Cadastro;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":15,"column":10,"nodeType":"204","messageId":"205","endLine":15,"endColumn":12},{"ruleId":"202","severity":1,"message":"206","line":15,"column":14,"nodeType":"204","messageId":"205","endLine":15,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":89,"column":6,"nodeType":"209","endLine":89,"endColumn":8,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":34,"column":6,"nodeType":"209","endLine":34,"endColumn":21,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"213","line":8,"column":16,"nodeType":"204","endLine":8,"endColumn":23},{"ruleId":"207","severity":1,"message":"213","line":9,"column":16,"nodeType":"204","endLine":9,"endColumn":23},{"ruleId":"198","replacedBy":"214"},{"ruleId":"200","replacedBy":"215"},{"ruleId":"207","severity":1,"message":"211","line":34,"column":6,"nodeType":"209","endLine":34,"endColumn":21,"suggestions":"216"},{"ruleId":"202","severity":1,"message":"203","line":15,"column":10,"nodeType":"204","messageId":"205","endLine":15,"endColumn":12},{"ruleId":"202","severity":1,"message":"206","line":15,"column":14,"nodeType":"204","messageId":"205","endLine":15,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":89,"column":6,"nodeType":"209","endLine":89,"endColumn":8,"suggestions":"217"},{"ruleId":"207","severity":1,"message":"213","line":8,"column":16,"nodeType":"204","endLine":8,"endColumn":23},{"ruleId":"207","severity":1,"message":"213","line":9,"column":16,"nodeType":"204","endLine":9,"endColumn":23},{"ruleId":"202","severity":1,"message":"218","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":23},{"ruleId":"198","replacedBy":"219"},{"ruleId":"200","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":20,"column":41,"nodeType":"223","messageId":"224","endLine":20,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":21,"column":45,"nodeType":"223","messageId":"224","endLine":21,"endColumn":47},{"ruleId":"225","severity":1,"message":"226","line":42,"column":17,"nodeType":"227","endLine":42,"endColumn":34},{"ruleId":"221","severity":1,"message":"222","line":35,"column":41,"nodeType":"223","messageId":"224","endLine":35,"endColumn":43},{"ruleId":"225","severity":1,"message":"226","line":63,"column":28,"nodeType":"227","endLine":63,"endColumn":45},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTaskDetails'. Either include it or remove the dependency array.","ArrayExpression",["230"],"React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.",["231"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["228"],["229"],["232"],["233"],"'filteractivated' is defined but never used.",["228"],["229"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"234","fix":"239"},"Update the dependencies array to be: [loadTaskDetails]",{"range":"240","text":"241"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"242","text":"243"},{"range":"244","text":"243"},{"range":"245","text":"241"},[2443,2445],"[loadTaskDetails]",[941,956],"[filterActived, loadTasks]",[943,958],[2435,2437]]