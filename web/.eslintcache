[{"D:\\GitHub\\ta-marcado\\web\\src\\index.js":"1","D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js":"2","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js":"3","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js":"4","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js":"5","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js":"6","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js":"7","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js":"8","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js":"9","D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js":"10","D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js":"11","D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js":"12","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js":"13","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js":"14","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js":"15","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js":"16","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js":"17","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js":"18","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js":"19","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js":"20","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js":"21","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js":"22","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js":"23","D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\index.js":"24","D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\styles.js":"25"},{"size":218,"mtime":1610039093146,"results":"26","hashOfConfig":"27"},{"size":998,"mtime":1622987897594,"results":"28","hashOfConfig":"27"},{"size":4362,"mtime":1620175086206,"results":"29","hashOfConfig":"27"},{"size":2409,"mtime":1621048519289,"results":"30","hashOfConfig":"27"},{"size":2054,"mtime":1623110138667,"results":"31","hashOfConfig":"27"},{"size":2906,"mtime":1623110362881,"results":"32","hashOfConfig":"27"},{"size":8103,"mtime":1623110120736,"results":"33","hashOfConfig":"27"},{"size":1004,"mtime":1617543128029,"results":"34","hashOfConfig":"27"},{"size":2623,"mtime":1617544762914,"results":"35","hashOfConfig":"27"},{"size":121,"mtime":1610039093146,"results":"36","hashOfConfig":"27"},{"size":640,"mtime":1610039093146,"results":"37","hashOfConfig":"27"},{"size":93,"mtime":1618796217865,"results":"38","hashOfConfig":"27"},{"size":1594,"mtime":1619143080153,"results":"39","hashOfConfig":"27"},{"size":1749,"mtime":1619142629960,"results":"40","hashOfConfig":"27"},{"size":3777,"mtime":1621297990981,"results":"41","hashOfConfig":"27"},{"size":223,"mtime":1617545239629,"results":"42","hashOfConfig":"27"},{"size":339,"mtime":1623110237511,"results":"43","hashOfConfig":"27"},{"size":687,"mtime":1610039093146,"results":"44","hashOfConfig":"27"},{"size":1560,"mtime":1623110226031,"results":"45","hashOfConfig":"27"},{"size":612,"mtime":1617544554492,"results":"46","hashOfConfig":"27"},{"size":370,"mtime":1618792340221,"results":"47","hashOfConfig":"27"},{"size":873,"mtime":1617544267047,"results":"48","hashOfConfig":"27"},{"size":1558,"mtime":1620869398887,"results":"49","hashOfConfig":"27"},{"size":3148,"mtime":1623113038871,"results":"50","hashOfConfig":"27"},{"size":3697,"mtime":1622991412692,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1bpsrbb",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\GitHub\\ta-marcado\\web\\src\\index.js",[],["106","107"],"D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js",["108"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        userid: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      userid: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js",["109"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport * as S from './styles';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('today');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n      setTasks(response.data);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function Notificacao(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect( () => {\r\n    loadTasks();\r\n    \r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [filterActived])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/login/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <S.FilterArea>\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n        <FilterCard title=\"Todos\" actived={filterActived === 'all'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n        <FilterCard title=\"Hoje\" actived={filterActived === 'today'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n        <FilterCard title=\"Mês\" actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n        </button>\r\n\r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n      </S.Title>\r\n      <S.Content>\r\n        {\r\n          tasks.map( t => (\r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} done={t.done}/>\r\n        </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n      \r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js",["110"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js",["111","112"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js",["113","114"],"import React , {useMemo} from 'react';\r\nimport * as S from './styles';\r\nimport {format} from 'date-fns';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction TaskCard({type, title, when, done}) {\r\n  const date = useMemo(() => format(new Date (when), 'dd/MM/yyyy'));\r\n  const hour = useMemo(() => format(new Date (when), 'HH:mm'));\r\n  return (\r\n    <S.Container done={done}>\r\n        <S.TopCard>\r\n        <img src={typeIcons[type]} alt=\"Ícone da Tarefa\"></img>\r\n        <h3>{title}</h3>\r\n        </S.TopCard>\r\n        <S.BottomCard>\r\n        <strong>{date}</strong>\r\n        <span>{hour}</span>\r\n        </S.BottomCard>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\index.js",["115","116","117","118","119"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\styles.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":88,"column":6,"nodeType":"126","endLine":88,"endColumn":8,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":34,"column":6,"nodeType":"126","endLine":34,"endColumn":21,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":42,"column":17,"nodeType":"132","endLine":42,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":21,"column":10,"nodeType":"135","messageId":"136","endLine":21,"endColumn":21},{"ruleId":"124","severity":1,"message":"137","line":77,"column":6,"nodeType":"126","endLine":77,"endColumn":12,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":8,"column":16,"nodeType":"135","endLine":8,"endColumn":23},{"ruleId":"124","severity":1,"message":"139","line":9,"column":16,"nodeType":"135","endLine":9,"endColumn":23},{"ruleId":"133","severity":1,"message":"140","line":6,"column":9,"nodeType":"135","messageId":"136","endLine":6,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":13,"column":10,"nodeType":"135","messageId":"136","endLine":13,"endColumn":21},{"ruleId":"133","severity":1,"message":"141","line":14,"column":10,"nodeType":"135","messageId":"136","endLine":14,"endColumn":18},{"ruleId":"133","severity":1,"message":"142","line":17,"column":10,"nodeType":"135","messageId":"136","endLine":17,"endColumn":16},{"ruleId":"124","severity":1,"message":"143","line":62,"column":6,"nodeType":"126","endLine":62,"endColumn":15,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTaskDetails'. Either include it or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'updateTasks' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'verifyConquest'. Either include it or remove the dependency array.",["149"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'Link' is defined but never used.","'username' is assigned a value but never used.","'undone' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadGraphs'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [loadTaskDetails]",{"range":"159","text":"160"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"161","text":"162"},"Update the dependencies array to be: [done, verifyConquest]",{"range":"163","text":"164"},"Update the dependencies array to be: [loadGraphs, loading]",{"range":"165","text":"166"},[2400,2402],"[loadTaskDetails]",[943,958],"[filterActived, loadTasks]",[2461,2467],"[done, verifyConquest]",[1717,1726],"[loadGraphs, loading]"]