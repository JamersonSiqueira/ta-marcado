[{"D:\\GitHub\\ta-marcado\\web\\src\\index.js":"1","D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js":"2","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js":"3","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js":"4","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js":"5","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js":"6","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js":"7","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js":"8","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js":"9","D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js":"10","D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js":"11","D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js":"12","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js":"13","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js":"14","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js":"15","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js":"16","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js":"17","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js":"18","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js":"19","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js":"20","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js":"21","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js":"22","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js":"23","D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\index.js":"24","D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\styles.js":"25","D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\Chart.js":"26"},{"size":218,"mtime":1610039093146,"results":"27","hashOfConfig":"28"},{"size":998,"mtime":1622987897594,"results":"29","hashOfConfig":"28"},{"size":4362,"mtime":1620175086206,"results":"30","hashOfConfig":"28"},{"size":2409,"mtime":1621048519289,"results":"31","hashOfConfig":"28"},{"size":2054,"mtime":1623110138667,"results":"32","hashOfConfig":"28"},{"size":2906,"mtime":1623110362881,"results":"33","hashOfConfig":"28"},{"size":8103,"mtime":1623110120736,"results":"34","hashOfConfig":"28"},{"size":1004,"mtime":1617543128029,"results":"35","hashOfConfig":"28"},{"size":2623,"mtime":1617544762914,"results":"36","hashOfConfig":"28"},{"size":121,"mtime":1610039093146,"results":"37","hashOfConfig":"28"},{"size":640,"mtime":1610039093146,"results":"38","hashOfConfig":"28"},{"size":93,"mtime":1618796217865,"results":"39","hashOfConfig":"28"},{"size":1594,"mtime":1619143080153,"results":"40","hashOfConfig":"28"},{"size":1749,"mtime":1619142629960,"results":"41","hashOfConfig":"28"},{"size":3777,"mtime":1621297990981,"results":"42","hashOfConfig":"28"},{"size":223,"mtime":1617545239629,"results":"43","hashOfConfig":"28"},{"size":339,"mtime":1623110237511,"results":"44","hashOfConfig":"28"},{"size":687,"mtime":1610039093146,"results":"45","hashOfConfig":"28"},{"size":1560,"mtime":1623110226031,"results":"46","hashOfConfig":"28"},{"size":612,"mtime":1617544554492,"results":"47","hashOfConfig":"28"},{"size":370,"mtime":1618792340221,"results":"48","hashOfConfig":"28"},{"size":873,"mtime":1617544267047,"results":"49","hashOfConfig":"28"},{"size":1558,"mtime":1620869398887,"results":"50","hashOfConfig":"28"},{"size":4602,"mtime":1623522231717,"results":"51","hashOfConfig":"28"},{"size":3697,"mtime":1622991412692,"results":"52","hashOfConfig":"28"},{"size":260,"mtime":1623522123548,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1bpsrbb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\ta-marcado\\web\\src\\index.js",[],["112","113"],"D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js",["114"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        userid: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      userid: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js",["115"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport * as S from './styles';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('today');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n      setTasks(response.data);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function Notificacao(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect( () => {\r\n    loadTasks();\r\n    \r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [filterActived])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/login/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <S.FilterArea>\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n        <FilterCard title=\"Todos\" actived={filterActived === 'all'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n        <FilterCard title=\"Hoje\" actived={filterActived === 'today'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n        <FilterCard title=\"Mês\" actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n        </button>\r\n\r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n      </S.Title>\r\n      <S.Content>\r\n        {\r\n          tasks.map( t => (\r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} done={t.done}/>\r\n        </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n      \r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js",["116"],"import React, { useState}  from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport * as S from './styles';\r\n\r\nfunction Login() {\r\n\r\n    const [login, setLogin] = useState();\r\n    const [senha, setSenha] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    async function verifyLogin(){\r\n        await api.get(`/user/search/all`)\r\n        .then(response => {\r\n            var i;\r\n            for (i=0;i<response.data.length;i++){\r\n                if(response.data[i].user===login){\r\n                    if(response.data[i].pass===senha){\r\n                        let id = response.data[i]._id\r\n                        localStorage.setItem('@tamarcado/userid',id);\r\n                        setRedirect(true);\r\n                        window.location.reload();\r\n                    } else {\r\n                        alert('Usuário ou senha incorretos! ');\r\n                    }\r\n                }\r\n            }\r\n            if(!localStorage.getItem('@tamarcado/userid')){\r\n                alert('Usuário não localizado!')\r\n            }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <S.Container>\r\n            \r\n            {redirect && <Redirect to=\"/\"/>}\r\n            <S.Content>\r\n                <img src={logo}/>\r\n                <h1>Entre no aplicativo!</h1>\r\n                <S.ValidationCode>\r\n                    <span>Login</span>\r\n                    <input type=\"text\" onChange={e => setLogin(e.target.value)} value={login}/>\r\n                    <span>Senha</span>\r\n                    <input type=\"password\" onChange={e => setSenha(e.target.value)} value={senha}/>\r\n                    <button type=\"button\" onClick={verifyLogin}>Entrar !</button>\r\n                </S.ValidationCode>\r\n                <Link to={`/cadastro`}>Não tem conta? Cadastre-se !</Link>\r\n            </S.Content>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js",["117","118"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport usericon from '../../assets/Unknown_person.jpg';\r\nimport * as S from './styles';\r\nimport { Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport LoadingMask from \"react-loadingmask\";\r\nimport \"react-loadingmask/dist/react-loadingmask.css\";\r\nimport imgconq1off from \"../../assets/aprendizoff.png\";\r\nimport imgconq1 from \"../../assets/aprendiz.png\";\r\nimport imgconq2off from \"../../assets/mestreoff.png\";\r\nimport imgconq2 from \"../../assets/mestre.png\";\r\nimport imgconq3off from \"../../assets/anciaooff.png\";\r\nimport imgconq3 from \"../../assets/anciao.png\";\r\nimport imgconq4off from \"../../assets/esportesoff.png\";\r\nimport imgconq4 from \"../../assets/esportes.png\";\r\n\r\nfunction Profile() {\r\n  const [updateTasks, setUpdateTasks] = useState('today');\r\n  const [username, setUsername] = useState('username');\r\n  const [done, setDone] = useState([]);\r\n  const [undone, setUndone]= useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [conq1, setConq1] = useState(false);\r\n  const [conq2, setConq2] = useState(false);\r\n  const [conq3, setConq3] = useState(false);\r\n  const [conq4, setConq4] = useState(false);\r\n\r\n  async function loadStatus(){\r\n    await api.get(`/user/${isConnected}`)\r\n    .then(response => {\r\n      setUsername(response.data.nome+\" \"+response.data.sobrenome)\r\n    })\r\n    await api.get(`/task/filter/countdone/${isConnected}`)\r\n    .then(response => {\r\n      setDone(response.data);\r\n    })\r\n    await api.get(`/task/filter/countundone/${isConnected}`)\r\n    .then(response => {\r\n      setUndone(response.data);\r\n    })\r\n    setLoading(false);\r\n  }\r\n\r\n  function Notificacao(){\r\n    setUpdateTasks('late');\r\n  }\r\n\r\n  function verifyConquest(){\r\n    if(done[\"total\"]>=5){\r\n      setConq1(true)\r\n      setConq2(true)\r\n      setConq3(true)\r\n    } else if(done[\"total\"]>=3){\r\n      setConq1(true)\r\n      setConq2(true)\r\n    } else if(done[\"total\"]>0)\r\n    setConq1(true)\r\n    \r\n    if(done[\"esportes\"]>=3)\r\n    setConq4(true)\r\n  }\r\n  \r\n  useEffect( () => {\r\n    //Carregar tarefas\r\n    loadStatus();\r\n    //Verificar conquistas\r\n    verifyConquest();\r\n    //Função do header\r\n    Notificacao();\r\n\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [done])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/login/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <LoadingMask loading={loading} text={\"Carregando...\"}>\r\n      <S.Content>\r\n      \r\n        <S.LeftSide>\r\n          <S.Title>\r\n            <h3>PERFIL</h3>\r\n          </S.Title>\r\n          <S.Image>\r\n            <img src={usericon} alt=\"Usuario\"></img>\r\n          </S.Image>\r\n          <S.Subtitle>\r\n            <h4>{username}</h4>\r\n          </S.Subtitle>\r\n            <S.ContentTasks>\r\n            <S.LeftSideTasks>\r\n            <span>Tarefas concluidas: {done[\"total\"]}</span>\r\n            <S.TasksDiv>\r\n              <S.TasksDivTitle>\r\n                <S.Span>Tipos:</S.Span>\r\n            </S.TasksDivTitle>\r\n                <S.Span>Tarefas padrão: {done[\"padrao\"]}</S.Span>\r\n                <S.Span>Esportes: {done[\"esportes\"]}</S.Span>\r\n                <S.Span>Alimentação: {done[\"alimentacao\"]}</S.Span>\r\n                <S.Span>Trabalho: {done[\"trabalho\"]}</S.Span>\r\n                <S.Span>Social: {done[\"social\"]}</S.Span>\r\n                <S.Span>Estudos: {done[\"estudos\"]}</S.Span>\r\n                <S.Span>Compras: {done[\"shopping\"]}</S.Span>\r\n                <S.Span>Viagens: {done[\"viagens\"]}</S.Span>\r\n                <S.Span>Academia: {done[\"academia\"]}</S.Span>\r\n            </S.TasksDiv> \r\n            </S.LeftSideTasks>\r\n            <S.RightSideTasks>\r\n            <span type=\"tipos\">Tarefas não concluidas: {undone[\"total\"]}</span>\r\n            <S.TasksDiv>\r\n              <S.TasksDivTitle>\r\n                <S.Span class=\"tipos\">Tipos:</S.Span>\r\n            </S.TasksDivTitle>\r\n                <S.Span>Tarefas padrão: {undone[\"padrao\"]}</S.Span>\r\n                <S.Span>Esportes: {undone[\"esportes\"]}</S.Span>\r\n                <S.Span>Alimentação: {undone[\"alimentacao\"]}</S.Span>\r\n                <S.Span>Trabalho: {undone[\"trabalho\"]}</S.Span>\r\n                <S.Span>Social: {undone[\"social\"]}</S.Span>\r\n                <S.Span>Estudos: {undone[\"estudos\"]}</S.Span>\r\n                <S.Span>Compras: {undone[\"shopping\"]}</S.Span>\r\n                <S.Span>Viagens: {undone[\"viagens\"]}</S.Span>\r\n                <S.Span>Academia: {undone[\"academia\"]}</S.Span>\r\n            </S.TasksDiv> \r\n            </S.RightSideTasks>\r\n          </S.ContentTasks>\r\n        </S.LeftSide>\r\n\r\n        <S.RightSide>\r\n          <S.Title>\r\n            <h3>CONQUISTAS</h3>\r\n          </S.Title>\r\n          {\r\n            loading ?\r\n            <>\r\n            </>\r\n            :\r\n            <S.Container>\r\n          { conq1===true ?            \r\n            <S.ConquestDiv>\r\n              <img src={imgconq1} alt=\"conquista1\"/>\r\n              <S.SpanConq>Aprendiz da Agenda</S.SpanConq>\r\n              <S.DivRightConq>\r\n              <S.SpanConqRight>Concluiu 1 tarefa de qualquer tipo</S.SpanConqRight>\r\n              </S.DivRightConq>\r\n            </S.ConquestDiv>\r\n            :\r\n            <S.ConquestDivOff>\r\n              <img src={imgconq1off} alt=\"conquista1bloq\"/>\r\n              <S.SpanConqOff>Aprendiz da Agenda</S.SpanConqOff>\r\n              <S.DivRightConq>\r\n              <S.SpanConqRightOff>Concluiu 1 tarefa de qualquer tipo</S.SpanConqRightOff>\r\n              </S.DivRightConq>\r\n            </S.ConquestDivOff>\r\n            }\r\n            { conq2===true ?            \r\n            <S.ConquestDiv>\r\n            <img src={imgconq2} alt=\"conquista2\"/>\r\n            <S.SpanConq>Mestre da Agenda</S.SpanConq>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRight>Concluiu 3 tarefas de qualquer tipo</S.SpanConqRight>\r\n            </S.DivRightConq>\r\n          </S.ConquestDiv>\r\n          :\r\n          <S.ConquestDivOff>\r\n            <img src={imgconq2off} alt=\"conquista2bloq\"/>\r\n            <S.SpanConqOff>Mestre da Agenda</S.SpanConqOff>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRightOff>Concluiu 3 tarefas de qualquer tipo</S.SpanConqRightOff>\r\n            </S.DivRightConq>\r\n          </S.ConquestDivOff>\r\n            }\r\n            { conq3===true ?            \r\n            <S.ConquestDiv>\r\n            <img src={imgconq3} alt=\"conquista3\"/>\r\n            <S.SpanConq>Ancião da Agenda</S.SpanConq>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRight>Concluiu 5 tarefas de qualquer tipo</S.SpanConqRight>\r\n            </S.DivRightConq>\r\n          </S.ConquestDiv>\r\n          :\r\n          <S.ConquestDivOff>\r\n            <img src={imgconq3off} alt=\"conquista3bloq\"/>\r\n            <S.SpanConqOff>Ancião da Agenda</S.SpanConqOff>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRightOff>Concluiu 5 tarefas de qualquer tipo</S.SpanConqRightOff>\r\n            </S.DivRightConq>\r\n          </S.ConquestDivOff>\r\n            }\r\n            { conq4===true ?            \r\n            <S.ConquestDiv>\r\n            <img src={imgconq4} alt=\"conquista4\"/>\r\n            <S.SpanConq>Amante dos Esportes</S.SpanConq>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRight>Concluiu 3 tarefas do tipo \"Esportes\"</S.SpanConqRight>\r\n            </S.DivRightConq>\r\n          </S.ConquestDiv>\r\n          :\r\n          <S.ConquestDivOff>\r\n            <img src={imgconq4off} alt=\"conquista4bloq\"/>\r\n            <S.SpanConqOff>Amante dos Esportes</S.SpanConqOff>\r\n            <S.DivRightConq>\r\n            <S.SpanConqRightOff>Concluiu 3 tarefas do tipo \"Esportes\"</S.SpanConqRightOff>\r\n            </S.DivRightConq>\r\n          </S.ConquestDivOff>\r\n            }\r\n            </S.Container>\r\n            }\r\n        </S.RightSide>\r\n      </S.Content>\r\n      </LoadingMask>\r\n      <Footer />\r\n      \r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js",["119","120"],"import React , {useMemo} from 'react';\r\nimport * as S from './styles';\r\nimport {format} from 'date-fns';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction TaskCard({type, title, when, done}) {\r\n  const date = useMemo(() => format(new Date (when), 'dd/MM/yyyy'));\r\n  const hour = useMemo(() => format(new Date (when), 'HH:mm'));\r\n  return (\r\n    <S.Container done={done}>\r\n        <S.TopCard>\r\n        <img src={typeIcons[type]} alt=\"Ícone da Tarefa\"></img>\r\n        <h3>{title}</h3>\r\n        </S.TopCard>\r\n        <S.BottomCard>\r\n        <strong>{date}</strong>\r\n        <span>{hour}</span>\r\n        </S.BottomCard>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\index.js",["121","122","123","124","125","126","127","128","129"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Dashboard\\Chart.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":88,"column":6,"nodeType":"136","endLine":88,"endColumn":8,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":34,"column":6,"nodeType":"136","endLine":34,"endColumn":21,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":42,"column":17,"nodeType":"142","endLine":42,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":21,"column":10,"nodeType":"145","messageId":"146","endLine":21,"endColumn":21},{"ruleId":"134","severity":1,"message":"147","line":77,"column":6,"nodeType":"136","endLine":77,"endColumn":12,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":8,"column":16,"nodeType":"145","endLine":8,"endColumn":23},{"ruleId":"134","severity":1,"message":"149","line":9,"column":16,"nodeType":"145","endLine":9,"endColumn":23},{"ruleId":"143","severity":1,"message":"150","line":6,"column":9,"nodeType":"145","messageId":"146","endLine":6,"endColumn":13},{"ruleId":"143","severity":1,"message":"151","line":10,"column":14,"nodeType":"145","messageId":"146","endLine":10,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":21},{"ruleId":"143","severity":1,"message":"152","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":18},{"ruleId":"143","severity":1,"message":"153","line":19,"column":10,"nodeType":"145","messageId":"146","endLine":19,"endColumn":16},{"ruleId":"143","severity":1,"message":"154","line":22,"column":10,"nodeType":"145","messageId":"146","endLine":22,"endColumn":23},{"ruleId":"143","severity":1,"message":"155","line":22,"column":25,"nodeType":"145","messageId":"146","endLine":22,"endColumn":41},{"ruleId":"143","severity":1,"message":"156","line":24,"column":7,"nodeType":"145","messageId":"146","endLine":24,"endColumn":13},{"ruleId":"134","severity":1,"message":"157","line":109,"column":6,"nodeType":"136","endLine":109,"endColumn":15,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTaskDetails'. Either include it or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.",["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'updateTasks' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'verifyConquest'. Either include it or remove the dependency array.",["163"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'Link' is defined but never used.","'Line' is defined but never used.","'username' is assigned a value but never used.","'undone' is assigned a value but never used.","'labelsgrafico' is assigned a value but never used.","'setLabelsGrafico' is assigned a value but never used.","'labels' is defined but never used.","React Hook useEffect has missing dependencies: 'loadGraphs', 'loadTasks', and 'taskdata'. Either include them or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [loadTaskDetails]",{"range":"173","text":"174"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"175","text":"176"},"Update the dependencies array to be: [done, verifyConquest]",{"range":"177","text":"178"},"Update the dependencies array to be: [loadGraphs, loadTasks, loading, taskdata]",{"range":"179","text":"180"},[2400,2402],"[loadTaskDetails]",[943,958],"[filterActived, loadTasks]",[2461,2467],"[done, verifyConquest]",[3089,3098],"[loadGraphs, loadTasks, loading, taskdata]"]