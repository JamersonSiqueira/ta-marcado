[{"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\index.js":"1","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\routes\\index.js":"2","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\index.js":"3","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\index.js":"4","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\index.js":"5","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\styles.js":"6","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\styles.js":"7","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\styles.js":"8","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\isConnected.js":"9","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\typeIcons.js":"10","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\services\\api.js":"11","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\index.js":"12","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\index.js":"13","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\index.js":"14","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\index.js":"15","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\styles.js":"16","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\styles.js":"17","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\styles.js":"18","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\styles.js":"19","D:\\GitHub\\ta-marcado\\web\\src\\index.js":"20","D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js":"21","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js":"22","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js":"23","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js":"24","D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js":"25","D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js":"26","D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js":"27","D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js":"28","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js":"29","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js":"30","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js":"31","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js":"32","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js":"33","D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js":"34","D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js":"35","D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js":"36","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js":"37","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js":"38","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js":"39","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js":"40","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js":"41","D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js":"42"},{"size":218,"mtime":1610039093146,"results":"43","hashOfConfig":"44"},{"size":644,"mtime":1610039093146,"results":"45","hashOfConfig":"44"},{"size":1532,"mtime":1610039093146,"results":"46","hashOfConfig":"44"},{"size":4405,"mtime":1610039093146,"results":"47","hashOfConfig":"44"},{"size":2408,"mtime":1610039093146,"results":"48","hashOfConfig":"44"},{"size":2626,"mtime":1610039093146,"results":"49","hashOfConfig":"44"},{"size":1186,"mtime":1610039093146,"results":"50","hashOfConfig":"44"},{"size":1004,"mtime":1610039093146,"results":"51","hashOfConfig":"44"},{"size":92,"mtime":1610039093146,"results":"52","hashOfConfig":"44"},{"size":640,"mtime":1610039093146,"results":"53","hashOfConfig":"44"},{"size":121,"mtime":1610039093146,"results":"54","hashOfConfig":"44"},{"size":219,"mtime":1610039093146,"results":"55","hashOfConfig":"44"},{"size":338,"mtime":1610039093130,"results":"56","hashOfConfig":"44"},{"size":687,"mtime":1610039093146,"results":"57","hashOfConfig":"44"},{"size":1536,"mtime":1610039093146,"results":"58","hashOfConfig":"44"},{"size":343,"mtime":1610039093146,"results":"59","hashOfConfig":"44"},{"size":873,"mtime":1610039093146,"results":"60","hashOfConfig":"44"},{"size":1597,"mtime":1610039093146,"results":"61","hashOfConfig":"44"},{"size":567,"mtime":1610039093146,"results":"62","hashOfConfig":"44"},{"size":218,"mtime":1610039093146,"results":"63","hashOfConfig":"64"},{"size":876,"mtime":1620866834068,"results":"65","hashOfConfig":"64"},{"size":2409,"mtime":1621048519289,"results":"66","hashOfConfig":"64"},{"size":4362,"mtime":1620175086206,"results":"67","hashOfConfig":"64"},{"size":1004,"mtime":1617543128029,"results":"68","hashOfConfig":"64"},{"size":121,"mtime":1610039093146,"results":"69","hashOfConfig":"64"},{"size":93,"mtime":1618796217865,"results":"70","hashOfConfig":"64"},{"size":2623,"mtime":1617544762914,"results":"71","hashOfConfig":"64"},{"size":640,"mtime":1610039093146,"results":"72","hashOfConfig":"64"},{"size":1617,"mtime":1621050515366,"results":"73","hashOfConfig":"64"},{"size":223,"mtime":1617545239629,"results":"74","hashOfConfig":"64"},{"size":687,"mtime":1610039093146,"results":"75","hashOfConfig":"64"},{"size":403,"mtime":1617544546948,"results":"76","hashOfConfig":"64"},{"size":1558,"mtime":1620869398887,"results":"77","hashOfConfig":"64"},{"size":370,"mtime":1618792340221,"results":"78","hashOfConfig":"64"},{"size":873,"mtime":1617544267047,"results":"79","hashOfConfig":"64"},{"size":612,"mtime":1617544554492,"results":"80","hashOfConfig":"64"},{"size":2052,"mtime":1619142603805,"results":"81","hashOfConfig":"64"},{"size":1749,"mtime":1619142629960,"results":"82","hashOfConfig":"64"},{"size":2894,"mtime":1619481501880,"results":"83","hashOfConfig":"64"},{"size":1594,"mtime":1619143080153,"results":"84","hashOfConfig":"64"},{"size":3818,"mtime":1621050456521,"results":"85","hashOfConfig":"64"},{"size":2436,"mtime":1621049198385,"results":"86","hashOfConfig":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"8i3q96",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"1jpm8pc",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"131"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"131"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"131"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"131"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\index.js",[],["180","181"],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\routes\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\index.js",["182","183","184"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [id, setId] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        macaddress: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      macaddress: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\index.js",["185"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\nimport * as S from './styles';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n      setTasks(response.data);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function Notificacao(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect( () => {\r\n    loadTasks();\r\n    \r\n    if(!isConnected)\r\n    setRedirect(true);\r\n  }, [filterActived])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/qrcode/\"/>}\r\n      <Header onClickNotify={Notificacao}/>\r\n      <S.FilterArea>\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n        <FilterCard title=\"Todos\" actived={filterActived === 'all'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n        <FilterCard title=\"Hoje\" actived={filterActived === 'today'}/>\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n        <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\r\n        <FilterCard title=\"Mês\" actived={filterActived === 'month'} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n        <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n        </button>\r\n\r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n      </S.Title>\r\n      <S.Content>\r\n        {\r\n          tasks.map( t => (\r\n            <Link to={`/task/${t._id}`}>\r\n        <TaskCard type={t.type} title={t.title} when={t.when} done={t.done}/>\r\n        </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n      \r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Task\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\QRCode\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\views\\Home\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\isConnected.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\utils\\typeIcons.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\services\\api.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\index.js",["186","187"],"import React , {useMemo} from 'react';\r\nimport * as S from './styles';\r\nimport {format} from 'date-fns';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction TaskCard({type, title, when, done}) {\r\n  const date = useMemo(() => format(new Date (when), 'dd/MM/yyyy'));\r\n  const hour = useMemo(() => format(new Date (when), 'HH:mm'));\r\n  return (\r\n    <S.Container done={done}>\r\n        <S.TopCard>\r\n        <img src={typeIcons[type]} alt=\"Ícone da Tarefa\"></img>\r\n        <h3>{title}</h3>\r\n        </S.TopCard>\r\n        <S.BottomCard>\r\n        <strong>{date}</strong>\r\n        <span>{hour}</span>\r\n        </S.BottomCard>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default TaskCard;\r\n","D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\index.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Footer\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\Header\\styles.js",[],"D:\\Backup Antigo\\Desktop\\Programação\\Projeto Integrado - Unifacs\\todo-udemy\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\index.js",[],["188","189"],"D:\\GitHub\\ta-marcado\\web\\src\\routes\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\index.js",["190"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\index.js",["191"],"import React, { useState, useEffect} from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport {format} from 'date-fns';\r\nimport {Redirect} from 'react-router-dom';\r\nimport isConnected from '../../utils/isConnected';\r\nimport * as S from './styles';\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n\r\n  async function loadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then(response => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format (new Date (response.data.when), 'yyyy-MM-dd'))\r\n      setHour(format (new Date (response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function save(){\r\n    //Validação\r\n    if (!title)\r\n      return alert(\"Informe o título da tarefa\")\r\n    else if(!description)\r\n      return alert(\"Informe a descrição da tarefa\")\r\n    else if(!type)\r\n      return alert(\"Informe o tipo da tarefa\")\r\n    else if(!date)\r\n      return alert(\"Informe a data da tarefa\")\r\n    else if(!hour)\r\n      return alert(\"Informe a hora da tarefa\")\r\n\r\n\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        userid: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      })\r\n      .then( () =>\r\n        setRedirect(true)\r\n        )\r\n    } else {\r\n    await api.post('/task', {\r\n      userid: isConnected,\r\n      type,\r\n      title,\r\n      description,\r\n      when: `${date}T${hour}:00.000`\r\n    })\r\n    .then( () =>\r\n      setRedirect(true)\r\n      )\r\n    }\r\n  }\r\n\r\n    async function remove() {\r\n      const res = window.confirm(\"Deseja remover a tarefa?\")\r\n      if( res === true){\r\n        await api.delete(`/task/${match.params.id}`)\r\n        .then(() =>\r\n        setRedirect(true))\r\n      }\r\n    }\r\n\r\n  useEffect( () => {\r\n    if(!isConnected)\r\n    setRedirect(true);\r\n    loadTaskDetails();\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <S.Container>\r\n        {redirect && <Redirect to=\"/\" />}\r\n      <Header />\r\n\r\n      <S.Form>\r\n          <S.TypeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={()=> setType(index)}>\r\n                    <img src={icon} alt=\" Tipo da Tarefa\"\r\n                    className={type && type !== index && 'inative'}/>\r\n                    </button>\r\n                ))\r\n            }\r\n          </S.TypeIcons>\r\n          <S.Input>\r\n              <span>Título</span>\r\n              <input type=\"text\" placeholder=\"Título da tarefa\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/>\r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n              <span>Descrição</span>\r\n              <textarea rows={5} placeholder=\"Detalhes da tarefa\"\r\n              onChange={e => setDescription(e.target.value)} value={description}/>\r\n              \r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n              <span>Data</span>\r\n              <input type=\"date\" placeholder=\"Data\"\r\n              onChange={e => setDate(e.target.value)} value={date}/>\r\n              \r\n          </S.Input>\r\n\r\n          <S.Input>\r\n              <span>Hora</span>\r\n              <input type=\"time\" placeholder=\"Hora\"\r\n              onChange={e => setHour(e.target.value)} value={hour}/>\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n              <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n              </div>\r\n\r\n              {match.params.id && <button type=\"button\" onClick={remove}>EXCLUIR</button>}\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n              <button type='button' onClick={save}  >SALVAR</button>\r\n          </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer />\r\n      </S.Container>\r\n    );\r\n}\r\n\r\nexport default Task;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Home\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\services\\api.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\isConnected.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Task\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\utils\\typeIcons.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\index.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\index.js",["192","193"],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\index.js",["194"],"import React from 'react';\r\nimport * as S from './styles';\r\n\r\nimport filter from '../../assets/filter.png';\r\nimport filteractivated from '../../assets/filter-actived.png';\r\n\r\n\r\nfunction FilterCard( {title, actived} ) {\r\n  return (\r\n    <S.Container actived ={actived}>\r\n      <img src={filter} alt='Filtro'></img> \r\n      <span>{title}</span>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default FilterCard;\r\n","D:\\GitHub\\ta-marcado\\web\\src\\components\\Header\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\Footer\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\TaskCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\components\\FilterCard\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\index.js",["195","196","197"],"import React, { useState}  from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport * as S from './styles';\r\n\r\nfunction Login() {\r\n\r\n    const [login, setLogin] = useState();\r\n    const [senha, setSenha] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    async function verifyLogin(){\r\n        await api.get(`/user/search/all`)\r\n        .then(response => {\r\n            var i;\r\n            for (i=0;i<response.data.length;i++){\r\n                if(response.data[i].user==login){\r\n                    if(response.data[i].pass==senha){\r\n                        let id = response.data[i]._id\r\n                        localStorage.setItem('@tamarcado/userid',id);\r\n                        setRedirect(true);\r\n                        window.location.reload();\r\n                    } else {\r\n                        alert('Usuário ou senha incorretos! ');\r\n                    }\r\n                }\r\n            }\r\n            if(!localStorage.getItem('@tamarcado/userid')){\r\n                alert('Usuário não localizado!')\r\n            }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <S.Container>\r\n            \r\n            {redirect && <Redirect to=\"/\"/>}\r\n            <S.Content>\r\n                <img src={logo}/>\r\n                <h1>Entre no aplicativo!</h1>\r\n                <S.ValidationCode>\r\n                    <span>Login</span>\r\n                    <input type=\"text\" onChange={e => setLogin(e.target.value)} value={login}/>\r\n                    <span>Senha</span>\r\n                    <input type=\"password\" onChange={e => setSenha(e.target.value)} value={senha}/>\r\n                    <button type=\"button\" onClick={verifyLogin}>Entrar !</button>\r\n                </S.ValidationCode>\r\n                <Link to={`/cadastro`}>Não tem conta? Cadastre-se !</Link>\r\n            </S.Content>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Login\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\index.js",["198","199"],"import React, { useState}  from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../../assets/logo.png';\r\nimport api from '../../services/api';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport * as S from './styles';\r\n\r\nfunction Cadastro() {\r\n\r\n    const [user, setUser] = useState();\r\n    const [pass, setPass] = useState();\r\n    const [nome, setNome] = useState();\r\n    const [sobrenome, setSobrenome] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    var flag = false;\r\n\r\n    async function cadastrarUsuario(){\r\n        if(!user) \r\n        return alert(\"Informe o usuário!\")\r\n        else if (!pass)\r\n        return alert(\"Informe a senha!\")\r\n        else if (!nome)\r\n        return alert(\"Informe seu nome!\")\r\n        else if (!sobrenome)\r\n        return alert(\"Informe seu sobrenome!\")\r\n        else if (!email)\r\n        return alert(\"Informe o e-mail!\")\r\n\r\n        await api.get(`/user/search/all`)\r\n        .then(response => {\r\n            var i;\r\n            for (i=0;i<response.data.length;i++){\r\n                if(response.data[i].user==user){\r\n                    flag=true;\r\n                }\r\n            }\r\n          })\r\n\r\n        if(!flag){\r\n        await api.post('/user', {\r\n            user,\r\n            pass,\r\n            nome,\r\n            sobrenome,\r\n            email\r\n        })\r\n        .then( () => {\r\n            alert(\"Cadastro realizado com sucesso! Redirecionando...\")\r\n            setRedirect(true)\r\n        })\r\n        .catch( () =>{\r\n            alert(\"Algo deu errado!\")\r\n        })\r\n    }\r\n        else {\r\n            return alert(\"Usuário já existe!\")\r\n        }}\r\n\r\n    return (\r\n        <S.Container>\r\n            <Link to={`/`}><img src={logo}/></Link>\r\n            \r\n            \r\n            {redirect && <Redirect to=\"/login\"/>}\r\n            <S.Content>\r\n                \r\n                <S.ContainerForm>\r\n                    <span>Nome</span>\r\n                    <input type=\"text\" onChange={e => setNome(e.target.value)} value={nome}/>\r\n                    <span>Sobrenome</span>\r\n                    <input type=\"text\" onChange={e => setSobrenome(e.target.value)} value={sobrenome}/>\r\n                    <span>Usuário</span>\r\n                    <input type=\"text\" onChange={e => setUser(e.target.value)} value={user}/>\r\n                    <span>Senha</span>\r\n                    <input type=\"password\" onChange={e => setPass(e.target.value)} value={pass}/>\r\n                    <span>Email</span>\r\n                    <input type=\"email\" onChange={e => setEmail(e.target.value)} value={email}/>\r\n                    <button type=\"button\" onClick={cadastrarUsuario}>Cadastrar !</button>\r\n                </S.ContainerForm>\r\n\r\n            </S.Content>\r\n            <Footer />\r\n        </S.Container>\r\n    )\r\n}\r\n\r\nexport default Cadastro;","D:\\GitHub\\ta-marcado\\web\\src\\views\\Cadastro\\styles.js",[],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\index.js",["200","201","202"],"D:\\GitHub\\ta-marcado\\web\\src\\views\\Profile\\styles.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":15,"column":10,"nodeType":"209","messageId":"210","endLine":15,"endColumn":12},{"ruleId":"207","severity":1,"message":"211","line":15,"column":14,"nodeType":"209","messageId":"210","endLine":15,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":89,"column":6,"nodeType":"214","endLine":89,"endColumn":8,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"216","line":34,"column":6,"nodeType":"214","endLine":34,"endColumn":21,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"218","line":8,"column":16,"nodeType":"209","endLine":8,"endColumn":23},{"ruleId":"212","severity":1,"message":"218","line":9,"column":16,"nodeType":"209","endLine":9,"endColumn":23},{"ruleId":"203","replacedBy":"219"},{"ruleId":"205","replacedBy":"220"},{"ruleId":"212","severity":1,"message":"216","line":34,"column":6,"nodeType":"214","endLine":34,"endColumn":21,"suggestions":"221"},{"ruleId":"212","severity":1,"message":"213","line":88,"column":6,"nodeType":"214","endLine":88,"endColumn":8,"suggestions":"222"},{"ruleId":"212","severity":1,"message":"218","line":8,"column":16,"nodeType":"209","endLine":8,"endColumn":23},{"ruleId":"212","severity":1,"message":"218","line":9,"column":16,"nodeType":"209","endLine":9,"endColumn":23},{"ruleId":"207","severity":1,"message":"223","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":23},{"ruleId":"224","severity":1,"message":"225","line":20,"column":41,"nodeType":"226","messageId":"227","endLine":20,"endColumn":43},{"ruleId":"224","severity":1,"message":"225","line":21,"column":45,"nodeType":"226","messageId":"227","endLine":21,"endColumn":47},{"ruleId":"228","severity":1,"message":"229","line":42,"column":17,"nodeType":"230","endLine":42,"endColumn":34},{"ruleId":"224","severity":1,"message":"225","line":35,"column":41,"nodeType":"226","messageId":"227","endLine":35,"endColumn":43},{"ruleId":"228","severity":1,"message":"229","line":63,"column":28,"nodeType":"230","endLine":63,"endColumn":45},{"ruleId":"207","severity":1,"message":"231","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":18},{"ruleId":"207","severity":1,"message":"232","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":16},{"ruleId":"207","severity":1,"message":"233","line":9,"column":9,"nodeType":"209","messageId":"210","endLine":9,"endColumn":13},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTaskDetails'. Either include it or remove the dependency array.","ArrayExpression",["236"],"React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.",["237"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["234"],["235"],["238"],["239"],"'filteractivated' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FilterCard' is defined but never used.","'TaskCard' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"242","fix":"244"},{"desc":"240","fix":"245"},"Update the dependencies array to be: [loadTaskDetails]",{"range":"246","text":"247"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"248","text":"249"},{"range":"250","text":"249"},{"range":"251","text":"247"},[2443,2445],"[loadTaskDetails]",[941,956],"[filterActived, loadTasks]",[943,958],[2400,2402]]